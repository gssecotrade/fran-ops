name: Fran Ops — Scheduler

on:
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * *'   # 08:00 Madrid (cron usa UTC)

concurrency:
  group: fran-ops-scheduler
  cancel-in-progress: false

jobs:
  run-ops:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Restaura Service Account (lo usan algunos scripts)
      - name: Restore Service Account JSON
        env:
          GOOGLE_SA_JSON_BASE64: ${{ secrets.GOOGLE_SA_JSON_BASE64 }}
        run: |
          mkdir -p ops/.secrets
          echo "$GOOGLE_SA_JSON_BASE64" | base64 -d > ops/.secrets/google-sa.json

      # Crea .env para utilidades
      - name: Create .env
        run: |
          cat > ops/.env <<'ENV'
          GOOGLE_SA_JSON=${{ github.workspace }}/ops/.secrets/google-sa.json
          SHEETS_SPREADSHEET_ID=${{ secrets.SHEETS_SPREADSHEET_ID }}
          GDRIVE_FOLDER_ID=${{ secrets.GDRIVE_FOLDER_ID }}

          # OAuth Drive
          GDRIVE_OAUTH_CLIENT_ID=${{ secrets.GDRIVE_OAUTH_CLIENT_ID }}
          GDRIVE_OAUTH_CLIENT_SECRET=${{ secrets.GDRIVE_OAUTH_CLIENT_SECRET }}
          GDRIVE_OAUTH_REFRESH_TOKEN=${{ secrets.GDRIVE_OAUTH_REFRESH_TOKEN }}

          MAKE_WEBHOOK_URL=
          SUMMARY_EMAIL=${{ secrets.SUMMARY_EMAIL }}
          SMTP_HOST=${{ secrets.SMTP_HOST }}
          SMTP_PORT=${{ secrets.SMTP_PORT }}
          SMTP_USER=${{ secrets.SMTP_USER }}
          SMTP_PASS=${{ secrets.SMTP_PASS }}
          SMTP_FROM=${{ secrets.SMTP_FROM }}
          SMTP_TO=${{ secrets.SMTP_TO }}
          ENV

      - name: Install deps
        run: |
          pip install -r ops/scripts/requirements.txt || true
          pip install google-api-python-client google-auth-httplib2 google-auth-oauthlib pandas

      # 1) Sheets -> CSV
      - name: Sheets to CSV
        env:
          SHEETS_SPREADSHEET_ID: ${{ secrets.SHEETS_SPREADSHEET_ID }}
          GOOGLE_SA_JSON: ${{ github.workspace }}/ops/.secrets/google-sa.json
        run: |
          python ops/scripts/sheets_to_csv.py || true

      # 2) Normaliza Loterías
      - name: Normalize Loterías
        run: |
          python ops/scripts/normalize_loterias.py || true

      # 3) Data Quality (NUEVO)
      - name: Data Quality Loterías
        run: |
          python ops/scripts/dq_loterias.py || true

      # 4) ZIPs
      - name: Zip all
        run: |
          bash ops/scripts/zip_all.sh || true

      # 5) Subida a Drive (OAuth humano)
      - name: Upload to GDrive
        env:
          GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}
          GDRIVE_OAUTH_CLIENT_ID: ${{ secrets.GDRIVE_OAUTH_CLIENT_ID }}
          GDRIVE_OAUTH_CLIENT_SECRET: ${{ secrets.GDRIVE_OAUTH_CLIENT_SECRET }}
          GDRIVE_OAUTH_REFRESH_TOKEN: ${{ secrets.GDRIVE_OAUTH_REFRESH_TOKEN }}
        run: |
          python ops/scripts/upload_to_gdrive.py || true

      # 6) Email resumen (incluye DQ)
      - name: Send summary email
        env:
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          SMTP_FROM: ${{ secrets.SMTP_FROM }}
          SMTP_TO:   ${{ secrets.SMTP_TO }}
          SUMMARY_EMAIL: ${{ secrets.SUMMARY_EMAIL }}
        run: |
          python ops/scripts/send_summary_email.py || true

      # 7) Publica artefactos (por si quieres descargar desde Actions)
      - name: Publicar artefactos
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*
          if-no-files-found: warn
          retention-days: 7
