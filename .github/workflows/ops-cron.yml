name: ops-cron

on:
  workflow_dispatch:
  schedule:
    - cron: "15 5 * * *"   # diario 05:15 UTC

permissions:
  contents: write

concurrency:
  group: ops-cron
  cancel-in-progress: false

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps (requests, bs4, lxml)
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 lxml

      - name: Locate OPS/scripts (case-insensitive) and show tree
        id: locate
        shell: bash
        run: |
          echo "---- repo tree (top) ----"
          ls -la
          echo "-------------------------"
          echo "---- list tracked files ----"
          git ls-files | sed 's/^/  /'
          echo "---------------------------"

          # Busca case-insensitive los scripts dentro de *ops/ o OPS/*
          LATEST=$(git ls-files | grep -i '^ops/scripts/fetch_lae_latest\.py$' || true)
          HIST=$(git ls-files   | grep -i '^ops/scripts/fetch_lae_historic\.py$' || true)

          if [ -z "$LATEST" ]; then
            echo "ERROR: no encuentro fetch_lae_latest.py (ni en ops/ ni OPS/)."
            exit 1
          fi
          if [ -z "$HIST" ]; then
            echo "ERROR: no encuentro fetch_lae_historic.py (ni en ops/ ni OPS/)."
            exit 1
          fi

          echo "SCRIPT_LATEST=$LATEST" >> $GITHUB_ENV
          echo "SCRIPT_HIST=$HIST"     >> $GITHUB_ENV
          echo "Usar√©:"
          echo "  latest: $LATEST"
          echo "  hist  : $HIST"

      - name: Build docs/api/lae_latest.json
        shell: bash
        run: |
          mkdir -p docs/api
          echo "[build] Generando lae_latest.json ..."
          python "$SCRIPT_LATEST" docs/api/lae_latest.json
          echo "---- head ----"
          head -n 30 docs/api/lae_latest.json || true

      - name: Build docs/api/lae_historico.json
        shell: bash
        run: |
          mkdir -p docs/api
          echo "[build] Generando lae_historico.json ..."
          python "$SCRIPT_HIST" docs/api/lae_historico.json
          echo "---- head ----"
          head -n 30 docs/api/lae_historico.json || true

      - name: Commit & Push both JSONs (atomic)
        shell: bash
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Alinea con main para evitar rechazos
          git pull --ff-only origin main || true

          git add docs/api/lae_latest.json docs/api/lae_historico.json
          if git diff --cached --quiet; then
            echo "No hay cambios que publicar."
            exit 0
          fi

          git commit -m "ops: update docs/api (latest + historico)"
          git push origin HEAD:main
