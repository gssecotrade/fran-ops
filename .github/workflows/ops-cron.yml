name: ops-cron

on:
  # programa (ajústalo si quieres otra cadencia)
  schedule:
    - cron: '0 6,12,18 * * *'
  # y ejecutable a mano
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps (requests, bs4, lxml)
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 lxml

      - name: Make output dir
        run: mkdir -p docs/api

      # ===== JSON "latest" real =====
      - name: Build docs/api/lae_latest.json
        id: latest
        run: |
          echo "[build] Generando latest real..."
          python ops/scripts/fetch_lae_latest.py docs/api/lae_latest.json || echo "::warning ::latest falló (se conserva versión previa si la hay)"

      # ===== JSON "histórico" real (página 1 por juego) =====
      - name: Build docs/api/lae_historico.json
        id: historic
        run: |
          echo "[build] Generando histórico real..."
          python ops/scripts/fetch_lae_historic.py docs/api/lae_historico.json || echo "::warning ::historic falló (se conserva versión previa si la hay)"

      # ===== Commit & push solo si hay cambios =====
      - name: Commit & Push JSONs
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add docs/api/lae_latest.json docs/api/lae_historico.json || true
          if ! git diff --cached --quiet; then
            git commit -m "ops: update docs/api JSONs (real scrape)"
            git pull --rebase --autostash origin main || true
            git push origin HEAD:main
          else
            echo "No hay cambios que publicar."
          fi
